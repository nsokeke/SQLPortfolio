/*Our content engagement team is looking into adding an option for our subscribers to start selecting which content to watch based on their IMDb scores. May you return a list of titles based on their imdB scores? Sort the scores from highest to lowest.*/
select title,
imdb
from streaming_shows
order by imdb desc

/*Sorry about this……this will need to be censored based on age restrictions. So, may you also add in the appropriate viewing audience age as well? We will now need this to be sorted by age from the youngest age viewing allowance to the oldest, then by the IMDb scores from highest to lowest. Thanks!*/
select title,
imdb,
rating
from streaming_shows
order by rating asc, imdb desc

/*We now need the same information for Rotten Tomatoes as well but instead of the age, we will need the following: Content titles, their year of release, and their Rotten Tomatoes score. Sort by the year of release from newest to oldest and their Rotten Tomatoes score from smallest to largest.*/ 
select title,
year,
rotten_tomatoes
from streaming_shows
order by year desc, rotten_tomatoes asc

/*Finance needs a list of our mobile and non-basic plans pricing for each country prior to the end of the day. We want to see the countries with the cheapest premium plans listed first.*/
select country,
code,
mobile_usd,
standard_usd,
premium_usd
from netflix_prices
order by premium_usd asc

/*Finance needs a list of our mobile and non-basic plans pricing for each country prior to the end of the day. We want to see the countries with the cheapest premium plans listed first.*/
select country,
code,
mobile_usd,
standard_usd,
premium_usd
from netflix_prices
order by premium_usd asc

/*The content strategy team needs a list of all tv shows on Netflix with at least a 7.0 score on IMDb and at least a 75 Rotten Tomatoes score for shows released after our inception. Sort by the score from largest to smallest, then by the title name from A to Z.*/
select title,
netflix,
imdb,
rotten_tomatoes,
year
from streaming_shows
where netflix = '1' and imdb >= 7.0 and rotten_tomatoes >= 75 and year > 1997
order by rotten_tomatoes desc, title asc

/*Actually, they need a list of all tv shows that are on all streaming platforms (excluding Disney+ as this is an available add on with Hulu) with this same information as #1.*/
select 
title,
netflix,
hulu,
prime_video
imdb,
rotten_tomatoes,
year
from streaming_shows
where netflix = '1' and hulu = '1' and prime_video = '1' and imdb >= 7.0 and rotten_tomatoes >= 75 and year > 1997
order by rotten_tomatoes desc, title asc

/*Just got back from a meeting with the content department. Unfortunately, their data analyst is out on leave, and they are in need of data pulls. May you provide them with the following at your earliest convenience:
 Provide a list of all movies released in Central America within the last 10 years. (S)
A list of all titles that were released after 2019. The director is a stickler for reviewing this information in a certain order to make it easier for him to digest. With this being said, please be sure to sort by title from A to Z.*/
select title,
release_year
from titles
where release_year > 2019 
order by 1 asc

/*Titles that were released during the pandemic. Again, refer to what I stated about the content director’s preference.*/
select title,
release_year
from titles
where release_year = 2020
order by 1 asc

/*10 non-reality TV shows that had the longest run*/
select title,
no_seasons
from titles
where type = 'TV Show' and listed_in not like '%Reality%'
order by no_seasons desc
limit 10

/*25 longest movies outside of our top markets released prior to the pandemic*/
select type,
title,
country,
release_year,
duration
from titles
where release_year < 2020 and (country not like '%United States%' and country not like '%Canada%')
and type = 'Movie'
order by duration desc 
limit 25

/*Just spoke with Jim from the Subscriber Finance team, and he is doing some analysis on our subscription payments. I provided him with some potential data points he would need in order to get what he is looking for. I need your assistance in providing him with the following:
Which premium users have a non-mobile plan?*/
select user_id
from userbase
where subscription_type = 'Premium' and primary_device = 'Smart TV'

/*List of millennial users in our top market that joined in the last year whose monthly subscription is at least $14.99 per month. Sort by the country from A to Z, then by the join date from newest to oldest if you may.*/
select 
user_id,
monthly_revenue,
join_date,
age,
country
from userbase
where age between 25 and 34 and country in ('United States','Canada') and
join_date between '10/01/2022' and '09/30/2023' and monthly_revenue >= 14.99

/*Users whose last payments were made on weekends. This is becoming an issue with our bank due to the processing delay we experience with these payments vs. weekday payments.*/
select user_id,
last_payment_date,
dayname(last_payment_date)
from userbase
where dayname(last_payment_date) in ('Sat','Sun')

/*All users who have made payments since the onset of the writers strike in May.*/
select user_id,
last_payment_date
from userbase
where last_payment_date >= '05/01/2023'

/*All users who joined the quarter after the start of the pandemic*/
select user_id,
join_date,
monthname(join_date) as Join_Month,
year(join_date) as Join_Year
from userbase
where monthname(join_date) in ('Apr','May','Jun') and year(join_date) = 2020

/*All users, along with their user data, that are not located in our largest markets that joined in the last year.*/
select *
from userbase
where country not in ('United States','Canada') and join_date between '10/1/2022' and '10/1/2023'

/*All users who joined in the months after the start of the pandemic during 2020 in our top markets on mobile devices.*/
You can not pull due to 2020 data not being in the table.

/*All users who joined on weekdays*/
select user_id,
last_payment_date,
dayname(last_payment_date) as Payment_Day
from userbase
where dayname(last_payment_date) not in ('Sat','Sun')

/*The talent team is in talks with a few A-list celebrities to sign multi-year contracts for Netflix-produced films. Currently, they are meeting with Kevin Hart’s and J Lo’s team and need the following:
List of all titles that star Kevin Hart. Sort the titles by year of release please */
select 
title,
release_year,
"CAST"
from titles
where "CAST" like '%Kevin Hart%'
order by 2 asc

/*US-only released movies that starred J.Lo*/
select 
title,
"CAST",
country
from titles
where "CAST" like '%Jennifer Lopez%'

/*List of directors as the directors Kevin and Jennifer will work with will be contingent on their contracts.*/
select 
director
from titles

/*We are meeting with Nielsen next week in regard to ratings regulations. Can you pull the following information prior to our meeting:
Which shows are appropriate for adults only? */
select title,
rating
from titles
where type = 'TV Show' and rating in ('TV-MA','TV-PG','R')

/*Which directors have PG-13 movies that were released in the last 3 years?*/
select Director,
title,
Type,
Rating,
Release_Year
from titles
where type = 'Movie' and rating = 'PG-13' and release_year between 2020 and 2023

/*Can you pull the 5 best days for Netflix’s stock that took place after COVID for our IR team?*/
select trading_date,
close 
from stock_price
where trading_date >= '04/01/2020'
order by close desc
limit 5

/*May you return all patient data? Be sure to sort the data by last name from A to Z, then by first name from A to Z */
select *
from patient_services_demographics
order by first_name asc, last_name asc

/*Which Boomer aged patients received meal related services? Boomers are patients that are at least 57 years old */
select first_name,
last_name,
patient_id_no,
servicename
from patient_services_demographics
where age >= 57 and servicename like '%Meals%'

/*Return a list of the 25 employees with the lowest hourly rate in any non support
departments (Support Departments: HR, Marketing, and Sales) who reside in the tri-state area:
Connecticut, New Jersey, and New York who have been employed with the company for at least
6 months */
select employee_id,
emplfirst,
empllast,
HOURLY_RATE,
department,
state,
hire_date,
datediff(month,hire_date,getdate()) as Hire_Term
from employee_demographics
where department not in ('HR','Marketing','Sales') and state in ('NY','NJ','CT') and
datediff(month,hire_date,getdate()) >= 6
order by hourly_rate asc
limit 25

/*Provide us with the 10 highest approved claim amounts for claims that were processed in Q1 2022*/
select first_name,
last_name,
patient_id_no,
quarter(date_of_claim) as Quarter_Number,
year(date_of_Claim) as Year,
date_of_claim,
amount
from patient_services_demographics
where claim_status = 'Approved' and quarter(date_of_claim) = 1 and year(date_of_claim) = 2022
order by amount desc
limit 10

/*The Director of Patient Services of the West Coast Division (California, Nevada, Arizona,
Oregon, Washington, New Mexico, and Texas) is looking for patients in her division who are
senior citizens (66 and older) whose claims took place between Q1 2020 and 2023, at least
$100 and currently in pending status. She needs this information for any patients who have
received any community or transportation named services. She does want to review this
information for patients who are oldest first. */
select first_name,
last_name,
PATIENT_ID_NO,
Age,
State,
DATE_OF_CLAIM,
year(date_of_claim) as Year_Of_Claim, quarter(date_of_claim) as Quarter_Claim, SERVICENAME,
CLAIM_STATUS,
AMOUNT
from patient_services_demographics
where age >= 66 and state in ('CA','NV','AR','OR','WA','NM','TX') and
quarter(date_of_claim) = 1 and
year(date_of_claim) between 2020 and 2023 and amount >= 100 and claim_status = 'Pending' and
(servicename like ‘%community%’ or servicename like ‘%transportation%’)
order by age desc

/*The CEO is in need of all employees who were hired in Q1 of this year that are in non
support departments (HR and Sales are support departments) who reside in the tri state area
(NY, CT, NJ) who make at least $75/hr and who participates in our benefits (401K and
Healthcare). Sort by the department from A to Z, then by the salary from largest to smallest.*/
select employee_id,
emplfirst,
empllast,
state,
department,
hire_date,
quarter(hire_date) as Quarter_of_Year,
year(hire_date) as Year,
hourly_rate,
hourly_rate*2080 as Salary,
company_match_ytd,
health_insurance_prem
from employee_demographics
where
quarter(hire_date) = 1 and
year(hire_date) = 1 and
department not in ('HR','Sales') and
state in ('NY','CT','NJ') and
hourly_rate >= 75 and
company_match > 0 and health_insurance_prem > 0
order by department asc, salary desc

/*Which employees were hired this current year?*/
select employee_id,
emplfirst,
empllast,
hire_date,
year(hire_date) as Hire_Year
from employee_demographics
where year(hire_date) = 2023

/*Which patients received community and transportation services in June 2022 that had
claims with a 1000 code?*/
select first_name,
LAST_NAME,
PATIENT_ID_NO,
service_delivery_date,
monthname(service_delivery_date) as Service_Month,
year(service_delivery_date) as Service_Year,
servicecode,
servicename
from patient_services_demographics
where servicecode like '%1000%' and monthname(service_delivery_date) = 'Jun' and servicename in
('Community Support Services','Medical Transportation') and year(service_delivery_date) = 2022

/*Which patients have themselves or social workers listed as their emergency contacts?*/
select first_name,
last_name,
patient_id_no,
emergency_contact_relationship
from patient_services_demographics
where emergency_contact_relationship like '%social worker%' or emergency_contact_relationship like
'%self%’ or emergency_contact_relationship like '%Self%’

/*Can you provide us with a list of the top 10 highest paid employees in the Engineering department?*/
select employee_id,
emplfirst,
empllast,
department,
hourly_rate
from employee_demographics
where department = 'Engineering'
order by hourly_rate desc
limit 10

/*Return a list of all departments in our company (non-duplicated).*/
select distinct department
from employee_demographics

/*Return a list of patients who had their services provided more than 3 days after the claim date. Be sure to exclude any patients who reported their claim on a weekend date.*/
select first_name,
last_name,
patient_id_no,
date_of_claim,
dayname(date_of_claim) as Name_Of_Day,
service_delivery_date,
datediff(day,date_of_claim,service_delivery_date) as Turntime
from patient_services_demographics
where dayname(date_of_claim) not in ('Sun','Sat') and datediff(day,date_of_claim,service_delivery_date) > 3

/*In the text box below, please write what the query below says. Be sure to use layman's terms.
SELECT
First_Name,
Last_Name,
Patient_ID_No,
Age,
City,
State,
Emergency_Contact_First,
Emergency_Contact_Last,
Emergency_Contact_Relationship,
Date_of_Visit,
Monthname(Date_of_Visit),
Dayname(Date_of_Visit),
Year(Date_of_Visit),
Quarter(Date_of_Visit),
Claim_Date,
Vendor,
ServiceCode,
ServiceName,
Claim_Status,
Claim_Amount,
Claim_Amount+3.95 as Claim_Fee
FROM PatientServicesDemographics
WHERE Age between 65 and 75
AND City in (‘New York’,’Los Angeles’,’Miami’,’Atlanta’,’Chicago’)
AND Vendor not in (‘Avant’,’Romino Services’,’Rupert Transpo’)
AND Claim_Amount
AND monthname(Claim_Date) in (‘Jan’,’Feb’,’Mar’,’Apr’,’May’,’Jun’)
AND (ServiceName not like ‘%community%’ and ServiceName not like ‘%transportation%’)
AND Emergency_Contact_Relationship in (‘child’,’self’,’spouse’)
AND year(Claim_Date) >= 2019
AND dayname(Date_of_visit) in (‘Mon’,’Tue’,’Wed’,’Thu’,’Fri’)
ORDER BY Claim_Amount asc
LIMIT 20 */
This query states to pull the following information from the PatientServicesDemographics table for 20
patients with the lowest claim amount: patients' personal contact information, along with the emergency
contact information, date/month/year of visits, vendors the patients have received services from, claim
date, service code, service name, status of claim, claim amount, and the claim amount with a $3.95 added
for patients based on the following patient parameters:
- Aged between 65 and 75
- Reside in NY, LA, Miami, Atlanta, or Chicago
- Did not receive community or transportation-based services from vendors Avant, Romino Services, and
Rupert Transpo
- Claims that took place on weekdays during January through June of 2019 through 2023
- Have self, their spouse, or their child/children as their emergency contact

/*In the text box below, please provide a list of all of the errors you see in the query below:
SELECT
First_Name
,Last_Name
,Patient_ID_No
Age,
City
State,
Date_of_Visit,
Claim_Date,
Monthname(Claim_Date,
Year(Claim_Date),Vendor,
ServiceCode,
ServiceName,
Claim_Status,
Claim_Amount
FROM PatientServicesDemographics
WHERE State in NY,CA,FL,GA,IL,TX
AND ClaimAmount between 500 and 1000
Vendor != ABC Services
ORDER State des
ORDER BY City asc*/
Here are the errors present in the query:
- Missing comma between patient ID and age columns
- Missing comma between city and state columns
- Missing closed parentheses after the Monthname(Claim_Date column
- Missing open and closed parentheses after around the records in the state filter, along with apostrophes
around each text (WHERE State in 'NY','CA','FL','GA','IL','TX')
- ClaimAmount column should be Claim_Amount in the WHERE statement
- ABC Services record in the Vendor filter is missing apostrophes
- The desc order in the ORDER BY is spelled incorrectly. Should be desc vs. desc
- Should be only one ORDER BY
(ORDER BY State desc, City asc)

/*Our SVP of HR wants to give everyone a 10% COLA (cost of living adjustment). Can you please provide me with the following for each employee:
Current salary
New salary with the 10% COLA increase
The amount of the 10% COLA*/
select emplfirst,
empllast,
hourly_rate,
hourly_rate * 2080 as Salary,
(hourly_rate * 2080) * .10 as COLA,
hourly_rate * 2080 * 1.10 as New_Salary_with_COLA
from employee_demographics

/*Calculate the salary for each employee. Hint: To calculate the salary from an hourly rate, you would
calculate the following: hourly rate * 2080 hours. 2080 hours are the number of hours employees work
in a year. */
select employee_id,
emplfirst,
empllast,
hourly_rate,
hourly_rate*2080 as Employee_Salary
from employee_demographics

/*Which 10 employees are paid the most? Be sure to also include the following for these 10
employees:
Current salary
New salary with the 10% COLA increase
The amount of the 10% COLA*/
select emplfirst,
empllast,
hourly_rate,
hourly_rate * 2080 as Salary,
(hourly_rate * 2080) * .10 as COLA,
hourly_rate * 2080 * 1.10 as New_Salary_with_COLA
from employee_demographics
order by Salary desc
limit 10

/*Please apply a 10% claims processing fee to all non-approved claims. Any claims processing fee
that is $3 or less can be disregarded.*/
SELECT *,
Amount*1.10 as Claim_with_Fee,
Amount*.10 as Claim_Fee
FROM patient_services_demographics
WHERE CLAIM_STATUS !='Approved' and amount*.10 >3

/*Calculate the following: Average annual salary, Maximum annual salary, Minimum annual salary, Number of employees*/
select Max(2080*hourly_rate) as Highest_Annual_Salary,
Min(2080*hourly_rate) as Lowest_Annual_Salary,
Avg(2080*hourly_rate) as Average_Annual_Salary,
Count(Employee_id) as Number_of_employees
from employee_demographics

/*What is the average claim amount for patients who reside in high cost of living areas (New York and California)?*/
select avg(amount) as Avg_Claim_Amount
from patient_services_demographics
where state in ('NY','CA')

/*What is the average claim amount for services that were delivered on the same day as the claim?*/
select avg(amount) as Average_Claim_Amount
from patient_services_demographics
where date_of_claim=service_delivery_date

/* What is the average annual salary for direct hires in supporting departments (HR, Sales, and Marketing)*/
select avg(hourly_rate*2080) as Average_Annual_Salary
from employee_demographics
where fte_type = 'Direct' and department in ('HR','Sales','Marketing')

/* May you provide us with a list of countries, how many total titles are on Netflix in the country, and the pricing?*/
select country,
basic_cost_per_month,
standard_cost_per_month,
premium_cost_per_month,
no_of_tv_shows,
no_of_movies,
no_of_tv_shows + no_of_movies as Total_No_Titles
from netflix_countries

/* 	Our normal trading volume on the market is roughly 6.5 million shares per day. Return a list of our stock performance along with the trading dates for stocks that traded at least normal volume in Q3 and Q4 in 2021. Be sure to also calculate the difference between the open and close price as we will need this to analyze fluctuations within the stock.*/
	select quarter(trading_date) as Stock_Quarter,
year(trading_date) as Stock_Year,
*,
close-open as Price_Diff
from stock_price
where volume >= 6500000 and quarter(trading_date) > 2 and year(trading_date) = 2021

/*We are considering a 15% increase for all plans for our top 10 countries with the largest content offering (excluding our top markets since we just did a price increase in our top markets). Yet, we only want to increase in these countries if the 15% increase does not exceed $1.50 per month. Return these countries with what the additional increase would be along with their new proposed prices and the size of their content.*/ 
select *,
no_of_tv_shows+no_of_movies as Total_Content,
basic_cost_per_month*1.15 as New_Basic,
standard_cost_per_month*1.15 as New_Standard,
premium_cost_per_month*1.15 as New_Premium,
basic_cost_per_month*.15 as Basic_Discount,
standard_cost_per_month*.15 as Standard_Discount,
premium_cost_per_month*.15 as Premium_Discount
from netflix_countries
where basic_cost_per_month*.15 <= 1.50 and standard_cost_per_month*.15 <= 1.50 and
premium_cost_per_month*.15 <= 1.50 and country not in ('United States','Canada')
order by Total_Content desc
limit 10

/*How many customers have been with us for at least 12 months?*/
select user_id,
join_date,
getdate() as Todays_Date,
datediff( month,join_date,'10/8/2023') as Month_Term
from userbase
where datediff(month,join_date,'10/8/2023') >= 12

/*We are missing converted pricing for our mobile plans in each country. Due to this, we are in need of the mobile plan pricing for each country. We only need it for countries that do not use a form of the dollar as its foreign currency. Also, be sure to exclude Canada as well.*/
select country,
code,
currency,
mobile,
mobile_usd
from netflix_prices
where (currency not like '%Dollar%' and currency not like '%dollars%') 

/*Calculate the difference between the highest score vs. the actual score for Rotten Tomatoes scored shows but only the shows that had both Rotten Tomatoes and IMDb scores. Rotten Tomatoes’ highest score is 100.*/
select title,
100 as Highest_RT_Score,
rotten_tomatoes,
100-rotten_tomatoes as RT_Score_Diff,
imdb
from streaming_shows
where rotten_tomatoes > 0 and imdb > 0

/*Which 10 shows had the largest difference in scoring with the highest vs. actual Rotten Tomatoes score?*/
select title,
100 as Highest_RT_Score,
rotten_tomatoes,
100-rotten_tomatoes as RT_Score_Diff,
imdb
from streaming_shows
where rotten_tomatoes > 0 and imdb > 0
order by RT_Score_Diff desc
limit 10

/*The film industry wants to reduce movie duration in our top markets. Which movies were over 2 hours in length that were released in the last 3 years in these markets? Sort by the longest length time (in hours) first.*/
select show_id,
title,
type,
duration,
duration/60 as Hours,
release_year,
country
from titles
where type = 'Movie' and (country like '%United States%' and country  like '%Canada%') 
and duration/60 > 2 
and release_year between 2020 and 2023

/*	How long has each of our customers been with us?*/
select user_id,
join_date,
getdate() as Today,
year(join_date) as Join_Year,
year(getdate()) as This_Year,
datediff(year,join_date,getdate() ) as Sub_Term
from userbase

/*What is the total number of hours of movie content we currently have for movies that are at least 1.5 hours in length?*/
select cast( sum(duration/60) as decimal) as Total_Movie_Hours
from titles
where type = 'Movie' and duration >= 90

/*What is the average movie time in hours for movies only in our top markets? Exclude documentaries.*/
select cast( avg(duration/60) as decimal(18,2) ) as Avg_Movie_Time
from titles
where type = 'Movie' and (country like '%United States%' or country like '%Canada%') and listed_in not like '%Documentaries%'

/*What is the highest premium monthly rate with the new 15% increase in price?*/
select 
max(premium_usd*1.15) as Highest_Premium_Price_Increase
from netflix_prices

/*May you also return the lowest and average premium monthly rate with this new increase?*/
select 
min(premium_usd*1.15) as Lowest_Premium_Price_Increase,
avg(premium_usd*1.15) as Average_Premium_Price_Increase
from netflix_prices

/*	How many countries would have at least a $20 price point for premium plans with the new 15% price increase?*/
Option 1 (using the Netflix_Countries table):
select count(country) as Country_Count
from netflix_countries
where premium_cost_per_month*1.15 >= 20

Option 2 (using the Netflix_Prices  table):
select count(country) as Premium_Country_Count
from netflix_prices
where premium_usd*1.15 >= 20

/*Due to the high costs in streaming licensing, we are considering purging 10% of the current library size for all countries. If we were to do this, what would be the library size for each country after the 10% purge?*/
select country,
no_of_tv_shows,
no_of_movies,
no_of_movies+no_of_tv_shows as Total_Library_by_Country,
(no_of_movies+no_of_tv_shows)*.90 as Post_Purge
from netflix_countries

/*What is the average age for mobile device users?*/
select avg(age)
from userbase
where primary_device != 'Smart TV'

/*What is the average amount of volume for stocks traded in 2020?*/
select cast( avg(volume) as decimal) as Avg_Volume
from stock_price
where year(trading_date) = 2020

/*What’s our highest and lowest closing price in the last 5 years?*/
select max(close) as Highest_Price,
min(close) as Lowest_Price
from stock_price
where trading_date between '10/7/2018' and '10/7/2023'

/*How many movies star The Rock?*/
select count(title) as Movie_Count
from titles
where type = 'Movie' and "CAST" like '%Dwayne Johnson%'

/*How many countries do we offer streaming services in?*/
Option 1 (using Netflix_Countries):
select count(country) as Country_Count
from netflix_countries


Option 2 (using Netflix_Prices):
select count(country)
from netflix_prices

/*What’s the average amount of time our customers have had a subscription?*/
select 
avg(datediff(day,join_date,'10/15/2023')) as Avg_Sub_Length
from userbase

/*How long ago was each stock trading date in years?*/
select trading_date,
datediff(year,trading_date,getdate()) as Years_Since_Trade_Date
from stock_price

/*Since our company’s inception, can you provide the 20 worst performing stock days based on the close price along with the day of the week?*/
select trading_date,
dayname(trading_date) as Trading_Day,
close
from stock_price
order by close asc
limit 20

/*All customers will be issued a price increase 3 years after their join date. May you provide a list of customers who will be issued an increase in 2024?*/
select *,
dateadd(year,3,join_date) as Date_of_Price_Increase
from userbase
where year( dateadd(year,3,join_date) ) = 2024

/*When customers join Netflix, they have a 30 day free trial from the date that they joined. May you list all customers who had a 30 day free trial this year?*/
select *,
dateadd(day,30,join_date) as Trial_Exp_Date
from userbase
where dateadd(day,30,join_date) between '01/01/2023' and '12/31/2023'

/*Compliance would like for us to remove our stock history data after 36 months of the stock date. Can you provide the removal date for each stock trading date?*/
select trading_date,
dateadd(month,36,trading_date) as Removal_Date
from stock_price

/*How many subscribers joined during March 2020?*/

Option 1:
select count(user_id) as Sub_Count
from userbase
where monthname(join_date) = 'Mar' and year(join_date) = 2020

Option 2:
select count(user_id) as Sub_Count
from userbase
where join_date between '03/01/2020' and '03/31/2020'

Option 3:
select count(user_id) as Sub_Count
from userbase
where month(join_date) = 3 and year(join_date) = 2020

/*What is the highest, lowest, and average closing stock price?*/
select max(close) as High_Close,
min(close) as Low_Close, 
avg(close) as Avg_Close
from stock_price

/*What is the average/highest/lowest monthly subscription cost, and number of customers for our non top markets for mobile users for users that joined during weekdays in March and April of 2020?*/
select cast(  avg(monthly_revenue)  as decimal (18,2)) as Avg_MTH_Cost,
max(monthly_revenue) as Highest_MTH_Cost,
min(monthly_revenue) as Lowest_MTH_Cost,
count(user_id) as Sub_Count
from userbase

/*Within our current content offering, when were the oldest and newest movies released, along with the number of movies, Julia Roberts, Brad Pitt, and Leonardo DiCaprio have starred in?*/
select 
max(release_year) as Newest_Movie,
min(release_year) as Oldest_Movie,
count(title) as Show_Count
from titles
where type = 'Movie' and ("CAST" like '%Julia Roberts%' or "CAST" like '%Brad Pitt%' or "CAST" like '%Leonardo DiCaprio%')

/*How many TV shows are available in our non top markets?*/
select count(title) as Show_Count
from titles
where type = 'TV Show' and (country not like '%Canada%' and country not like '%United States%')

/*Which countries are in both the Countries and Prices table?*/
select netflix_countries.country as NCCountry,
netflix_prices.country as NPCountry
from netflix_countries inner join netflix_prices on netflix_countries.country=netflix_prices.country

/*Which countries are in the Prices table but not the Countries table?*/
select 
netflix_prices.country as NPCountry,
netflix_countries.country as NCCountry
from netflix_prices left join netflix_countries on netflix_countries.country=netflix_prices.country
where netflix_countries.country is null

/*Which countries are in the Countries table but not the Prices table*/
LEFT JOIN
select netflix_countries.country as NCCountries,
netflix_prices.country as NPCountries
from netflix_countries left join netflix_prices on netflix_countries.country=netflix_prices.country
where netflix_prices.country is null
RIGHT JOIN
select netflix_countries.country as NCCountry,
netflix_prices.country as Prices_Country
from netflix_prices right join netflix_countries on netflix_countries.country=netflix_prices.country
where netflix_prices.country is null
FULL JOIN
select netflix_countries.country as NCCountry,
netflix_prices.country as Prices_Country
from netflix_prices full join netflix_countries on netflix_countries.country=netflix_prices.country
where netflix_countries.country is not null and netflix_prices.country is null

/*Which stock dates are included in both the History and the Stock Prices table? Be sure to include the month’s name, quarter, and day of the week for each of the stock dates. Also, calculate how long ago the stock trading date was in days.*/
select history_stock.trading_date,
monthname(history_stock.trading_date) as Stock_Month,
dayname(history_stock.trading_date) as Stock_Month,
quarter(history_stock.trading_date) as Stock_Month,
year(history_stock.trading_date) as Stock_Month,
datediff(day,history_stock.trading_date,getdate()) as Days_Since
from history_stock join stock_price on history_stock.trading_date=stock_price.trading_date

/*Which stock dates from the History Stock table are not currently included in our Stock Prices table?*/
select history_stock.trading_date as History_StockDate,
stock_price.trading_date as SP_Stock_Date
from history_stock left join stock_price on history_stock.trading_date=stock_price.trading_date
where stock_price.trading_date is null

/*Please provide the rating description for ratings in the Titles table.*/
select titles.title,
titles.rating,
ratings.ratinglevel
from titles inner join ratings on ratings.rating=titles.rating

/*Which titles do not have ratings descriptions?*/
select titles.title,
ratings.ratinglevel 
from ratings right join titles on titles.rating=ratings.rating
where ratinglevel is null

/*Which premium subscribers are not email subscribers?*/
select userbase.user_id,
email_sub.id as SubID
from userbase left join email_sub on email_sub.id=userbase.user_id
where userbase.subscription_type = 'Premium' and email_sub.id is null

/*How many of our subscribers are not email subscribers?*/
select count(userbase.user_id) as NonSub_Count
from userbase left join email_sub on email_sub.id=userbase.user_id
where email_sub.id is null

/* Include all userbase data for our Gmail subscribers (not Gmail email subscribers, only Gmail domain accounts), along with their first names and last names.*/
INNER JOIN:
select userbase.*,
sub_demo.e_dom,
sub_demo.sub_fname,
sub_demo.sub_lname
from userbase inner join sub_demo on sub_demo.sub_id=userbase.user_id
where sub_demo.e_dom = '@gmail.com'

FULL JOIN:
select userbase.*,
sub_demo.e_dom,
sub_demo.sub_fname,
sub_demo.sub_lname
from userbase full join sub_demo on sub_demo.sub_id=userbase.user_id
where sub_demo.e_dom = '@gmail.com'

/*Provide the age, subscription type, and primary device used for all of our email subscribers*/
select email_sub.id as SubID,
userbase.age,
userbase.subscription_type,
userbase.primary_device
from email_sub left join userbase on email_sub.id=userbase.user_id

INNER JOIN
select email_sub.id,
userbase.age,
userbase.subscription_type,
userbase.primary_device
from userbase inner join email_sub on email_sub.id=userbase.user_id

/*Which movies have been renewed to stay on Netflix longer? Hint: The Content_Expire table lists all titles whose titles have been renewed to stay longer on Netflix. */
select titles.title,
content_expire.exp_renewal
from titles inner join content_expire on titles.show_id=content_expire.show_id
where type = 'Movie'

/*Which non-premium subscribers are also email subscribers? */
select userbase.user_id as UBID,
email_sub.id as SubID,
userbase.subscription_type
from userbase inner join email_sub on email_sub.id=userbase.user_id
where userbase.subscription_type != 'Premium'

/* Please provide all userbase data for non-AMEX subscribers*/
select userbase.*,
cof.cof_type
from userbase inner join cof on cof.cc_id=userbase.user_id
where cof.cof_type != 'AMEX'

/*The Finance team is doing some pricing analysis for our non-top market customers and needs a list of our email subscribers, along with their names, country of residence, currency, and the USD pricing for all plans in their respective countries.*/
select email_sub.id,
sub_demo.sub_fname,
sub_demo.sub_lname,
userbase.country,
netflix_prices.currency,
netflix_prices.basic_usd,
netflix_prices.standard_usd,
netflix_prices.premium_usd
from email_sub inner join userbase on userbase.user_id=email_sub.id /*This is joining the email_sub table and the userbase table 
on the common ID columns from each table*/
inner join netflix_prices on netflix_prices.country=userbase.country /*We are now joining in our third table (Netflix Prices) with at least ONE of the other tables we have already joined (either Userbase or Email_Sub). We decided to join the Prices table with the Userbase table on the Country column*/
inner join sub_demo on sub_demo.sub_id=userbase.user_id /*We are now joining in our fourth table (Sub Demo) with at least
ONE of the other three tables we have joined in (Prices, Email_Sub, or Userbase table. We decided to join the sub_Demo table with the Userbase table on the ID columns*/
where netflix_prices.country not in ('Canada','United States')

/*Our international finance team is asking if you can provide the domestic currency for all non-email subscribers located outside of our top markets. Thanks!*/
select 
userbase.user_id,
userbase.country,
email_sub.id,
netflix_prices.currency
from userbase left join email_sub on email_sub.id=userbase.user_id
inner join netflix_prices on netflix_prices.country=userbase.country
where email_sub.id is null and userbase.country not in ('Canada','United States')

/*Our Finance Director is wanting to see if there is a correlation between our stock price and subscriber registration for non Visa and Mastercard users. They want to see how our stock price can be impacted based on the potential new laws on credit card fees with Visa and Mastercard. They want to see if on the days there were stock trades and new users who joined on those days, how many of those users registered didn’t use Visas or Mastercards.*/
select stock_price.trading_date,
userbase.user_id,
userbase.join_date,
cof.cof_type
from stock_price inner join userbase on userbase.join_date=stock_price.trading_date
inner join cof on cof.cc_id=userbase.user_id
where cof.cof_type not in ('VISA','MC')
order by stock_price.trading_date asc

/*We are running a cross-promotion marketing campaign in specific countries to get more non-premium Visa and Mastercard subscribers to opt in for our emails. The countries we are looking to target are those who have a conversion premium compared to the US dollar since these countries have higher prices compared to others.  May you provide the following for these subscribers:
•	Names and account ID 
•	Their country of residence
•	Their local currency
•	Conversion rate
•	Conversion rate premium compared to the US (i.e. if Euro’s conversion is 1.26, their premium would be 26% compared to the US)*/
select userbase.user_id,
email_sub.id,
sub_demo.sub_fname,
sub_demo.sub_lname,
userbase.subscription_type,
cof.cof_type,
userbase.country,
netflix_prices.currency,
netflix_prices.conversion,
netflix_prices.conversion - 1 as Conversion_Premium
from userbase left join email_sub on email_sub.id=userbase.user_id
inner join cof on cof.cc_id=userbase.user_id
inner join sub_demo on sub_demo.sub_id=userbase.user_id
inner join netflix_prices on netflix_prices.country = userbase.country
where email_sub.id is null and userbase.subscription_type != 'Premium' and cof.cof_type in ('VISA','MC')
and netflix_prices.conversion > 1

/*The Director of Content is requesting rating details for Hulu and Amazon featured drama shows that didn’t get content renewal for their content.*/
select Streaming_Shows.Title, 
Titles.Show_ID,
CONTENT_EXPIRE.EXP_RENEWAL,
ratings.ratinglevel as Ratings_Description
from streaming_shows left join titles on titles.title=streaming_shows.title /*Pull all items from the streaming shows table and compare it to the Titles table to see if the titles in the Streaming Shows table are also in the Titles table*/
left join content_expire on content_expire.show_id=titles.show_id
left join ratings on ratings.rating=titles.rating
where content_expire.exp_renewal is null and streaming_shows.hulu = 1 and streaming_shows.prime_video = 1

/*The DBA noticed that some of our titles in the Streaming Shows table are incorrectly formatted for the ratings record. Can you provide a list of which ratings in this table are incorrectly formatted based on the ratings in the Ratings table?*/
select distinct streaming_shows.rating as SS_Ratings,
ratings.rating as Ratings_Table_Ratings
from streaming_shows left join ratings on ratings.rating=streaming_shows.rating
where ratings.rating is null

/*The content team is in the process of updating content information for TV shows and are in need of the number of mature and general audience rated shows that are featured on at least two streaming platforms that do not have casting information, along with their review scores for these shows. May you provide prior to EOD?*/
select Streaming_shows.title,
titles.cast,
streaming_shows.hulu,
streaming_shows.disneyplus,
streaming_shows.netflix,
streaming_shows.prime_video,
streaming_shows.imdb,
streaming_shows.rotten_tomatoes,
streaming_shows.rating,
ratings.ratinglevel,
hulu+disneyplus+netflix+prime_video as Streaming_Count
from streaming_shows left join titles on titles.title=streaming_shows.title
inner join ratings on ratings.rating=streaming_shows.rating
where titles.cast is null and (ratings.ratinglevel like '%General%' or ratings.ratinglevel like '%mature%')
and hulu+disneyplus+netflix+prime_video >= 2

/*We are running a cross promotion with various NPOs (non-profit organizations) in order to get more subscribers who work in the NPO field to register for our email list. Anyone who signs up will receive a 10% monthly discount on their current monthly billing plan as long as they have been a subscriber for at least 12 months.

Finance would also like to see what these potential subscribers' new monthly billing cost will be once the discount is applied, along with the annual revenue we will receive from the subscribers, and the difference between the annual revenue with the new discount applied and the annual revenue from the non-discounted price.

Please provide a list of these customers (include names and IDs) along with their financial information requested by Finance.FYI, all NPO subscribers have a .org email address.*/
select sub_demo.*/
email_sub.*,
userbase.join_date,
datediff(month,join_date,getdate()) as Term,
userbase.monthly_revenue,
userbase.monthly_revenue * .10 as Monthly_Discount_Amount,
userbase.monthly_revenue *.90 as New_Monthly_Bill_Rate,
userbase.monthly_revenue * 12 as Annual_Revenue,
userbase.monthly_revenue *.90 * 12 as New_Annual_Revenue,
(userbase.monthly_revenue *.90 * 12) - (userbase.monthly_revenue * 12) as Annual_Difference
from sub_demo left join email_sub on email_sub.id=sub_demo.sub_id
inner join userbase on userbase.user_id=sub_demo.sub_id
where email_sub.id is null and sub_demo.e_dom like '%.org%' and datediff(month,join_date,getdate()) >= 12

/*Return the following information for wholesale candles purchased at malls and outlets for
customers who have been with us for at least 1 year (Do not include candles that have been returned;
Returned items have a negative quantity):
· Client name
· Onboard date
· Onboard year
· How long the client has been a customer
· Transaction number
· Transaction date
· Transaction day of the week
· Transaction month
· Transaction quarter
· Transaction year
· Customer ID number
· Location
· Quantity
· Price
· Transaction amount including the wholesale discount
· Invoice due date (Transaction date + net terms)
· Month of invoice due date
· Year of invoice due date*/
Answer 1: No Results
select
shopping_mall.description,
customer_name.client,
customer_name.onboard_date,
year(customer_name.onboard_date) as Onboard_Year,
datediff(year,onboard_date,getdate()) as Customer_Term,
shopping_mall.invoice_no,
shopping_mall.transaction_date,
dayname(shopping_mall.transaction_date) as Transaction_Day,
monthname(shopping_mall.transaction_date) as Transaction_Month,
quarter(shopping_mall.transaction_date) as Transaction_Quarter,
year(shopping_mall.transaction_date) as Transaction_Year,
customer_name.customerid,
shopping_mall.shopping_mall as Location,
shopping_mall.quantity,
shopping_mall.price,
(shopping_mall.price*shopping_mall.quantity)*(1-wholesale_discount.discount) as Transaction_Amount,
dateadd(day,online_invoice.net_terms,shopping_mall.transaction_date) as Invoice_Due_Date,
monthname(dateadd(day,online_invoice.net_terms,shopping_mall.transaction_date)) as Invoice_Due_Month,
Year(dateadd(day,online_invoice.net_terms,shopping_mall.transaction_date)) as Invoice_Due_Year
from shopping_mall inner join customer_name on shopping_mall.customer_id=customer_name.customerid
inner join online_invoice on online_invoice.invoice=shopping_mall.invoice_no
inner join wholesale_discount on wholesale_discount.item_name=shopping_mall.description
where customer_name.wholesale_account = 'Y' and
(shopping_mall.shopping_mall like '%Outlet%' or shopping_mall.shopping_mall like '%Mall%')
and shopping_mall.quantity >-1 and datediff(year,onboard_date,getdate()) >=1
and shopping_mall.description like '%CANDLE%'

/*Return the following for non-wholesale transactions that did not take place at malls or outlets for
clients who onboarded this year:
· Total revenue
· Average transaction (Round to two decimal places)
Most expensive transaction
· Cheapest transaction
· Number of transactions*/
Answer 1: No Results
select
sum((shopping_mall.price*shopping_mall.quantity)) as Total_Revenue,
cast(avg((shopping_mall.price*shopping_mall.quantity)) as decimal(18,2)) as Average_Transaction,
min((shopping_mall.price*shopping_mall.quantity)) as Cheapest_Transaction,
count(shopping_mall.invoice_no) as Transaction_Count
from shopping_mall left join customer_name on shopping_mall.customer_id=customer_name.customerid
where customer_name.wholesale_account = 'N' and
(shopping_mall.shopping_mall not like '%Outlet%' and shopping_mall.shopping_mall not like '%Mall%') and
year(customer_name.onboard_date) = 2023

/*What Does This Query Say?CREATE TABLE customers (
customer_id INT,
first_name VARCHAR(50),
last_name VARCHAR(50),
city VARCHAR(50)
);
CREATE TABLE orders (
order_id INT,
customer_id INT,
order_date DATE,
total_amount DECIMAL(10, 2),
FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);
CREATE TABLE products (
product_id INT,
product_name VARCHAR(100),
category VARCHAR(50)
);
INSERT INTO customers (customer_id, first_name, last_name, city)
VALUES
(1, 'John', 'Doe', 'New York'),
(2, 'Jane', 'Smith', 'Los Angeles'),
(3, 'Michael', 'Johnson', 'Chicago');
INSERT INTO orders (order_id, customer_id, order_date, total_amount)
VALUES
(101, 1, '2023-09-20', 150.00),
(102, 2, '2023-09-21', 200.50),
(103, 1, '2023-09-22', 100.75),
(104, 3, '2023-09-23', 300.20);
INSERT INTO products (product_id, product_name, category)
VALUES
(501, 'Laptop', 'Electronics'),
(502, 'Smartphone', 'Electronics'),
(503, 'T-Shirt', 'Apparel'),
(504, 'Shoes', 'Apparel');*/
Answer: This query states to create three tables: Customers, Orders, and Products. Within these three
tables, the respective data and data types are to be inserted into the designated fields into these tables.

/*What Does This Query Say?SELECT
customers.first_name,
customers.last_name,
orders.order_id,
orders.order_date,
cast(orders.total_amount as decimal)
FROM customers RIGHT JOIN orders ON customers.customer_id = orders.customer_id*/
Answer: This query states to return all customers’ first and last names, along with their order number order
date, and order amount (formatted as a whole number with no decimal places) from the Order table and
any corresponding information from the Customers table.

/*What Does This Query Say?
SELECT
residentID,
residentfirst,
residentlast,
census_date_taken,
region,
year(census_date_taken),
population_count,
population_count*1.03,
population_count*.03,
DATEADD(year, 1, GETDATE()) as Census_Release_Year
FROM population_data*/
Answer: This query states to return the following:
• resident’s ID
• resident’s name
• Census date
• Region the resident is located in
• Year of the census date
• Population count
• Population count with a 3% increase added to it
• The amount of the 3% population
• Census release date, which is one year from the census date

/*What Does This Query Say?
SELECT
customers.first_name,
customers.last_name,
orders.order_id,
orders.order_date,
products.product_name,
orders.total_amount
FROM
customers
INNER JOIN
orders ON customers.customer_id = orders.customer_id
INNER JOIN
products ON orders.product_id = products.product_id
WHERE
customers.city = 'New York'
AND orders.order_date BETWEEN '2023-09-20' AND '2023-09-23'
AND (products.category not like '%Electronics%' and products.category not like '%Accessories%')
ORDER BY orders.total_amount DESC
LIMIT 10*/
Return the 10 highest order totals along with the customers’ names, order date, products they purchased, and the
order amount for customers located in New York who purchased their orders between September 20th and September
23rd, 2023 for products that were not electronics or accessories bot only for customers that are present in all three tables.

/*What Does This Query Say?
SELECT
users.user_id,
users.first_name,
users.last_name,
users.email,
subscriptions.subscription_type,
subscriptions.start_date,
subscriptions.end_date,
movies.title,
movies.genre,
movies.release_date,
payment_info.payment_method,
payment_info.card_number
FROM
users
LEFT JOIN
subscriptions ON users.user_id = subscriptions.user_id
LEFT JOIN
payment_info ON users.user_id = payment_info.user_id*/
Answer: Return all user data specified in the select statement from the Users table along with their
corresponding data from the Subscriptions and Payment_Info table.

/*Our marketing director wants to focus on age specific target marketing for our users. May you provide her with a list of users who are only Gen Zers and non-Gen Zers? Gen Z is any user 24 and under.*/
select user_id,
age,
case when age <= 24 then 'Gen Z' else 'Non Gen Z' end as Generation
from userbase
order by age asc

/*We are launching a 90-day marketing partnership with Rotten Tomatoes and the VP of Content is inquiring about the scoring bands with Rotten Tomatoes for non-mature rated renewal dramas. I believe the scoring system is as follows:
•	Under 60%: Rotten
•	60% - 75%: Fresh
•	75%+: Certified Fresh*/
select streaming_shows.title,
titles.title as Titles_Column,
content_expire.exp_renewal,
titles.listed_in,
streaming_shows.rating,
streaming_shows.rotten_tomatoes,
case when rotten_tomatoes < 60 then 'Rotten' 
     when rotten_tomatoes between 60 and 75 then 'Fresh' else 'Certified Fresh' end as RT_Score_Band
from streaming_shows left join titles on titles.title=streaming_shows.title
inner join content_expire on content_expire.show_id=titles.show_id
where titles.listed_in like '%Drama%' and streaming_shows.rating != 'TV-MA'

/*Just got out of a meeting with Finance. They are discussing price hikes in Latin America (roughly 7%) and non Latin American countries (roughly 14%). Can you calculate how this would impact each country’s pricing plans with these new discounts?
The following countries make up the Latin American market:
Argentina
Belize
Bolivia
Brazil
Chile
Colombia
Costa Rica
Cuba
Dominican Republic
Ecuador
El Salvador
French Guiana 
Guadeloupe
Guatemala
Guyana
Haiti
Honduras
Martinique
Mexico
Nicaragua
Panama
Paraguay
Peru
Puerto Rico
Saint-Barthelemy
Suriname
Uruguay
Venezuela
Saint-Martin (French part)
Jamaica
Saint Lucia*/
select country, 
CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN 'Latin America' ELSE 'Non Latin America' END as Country_Type,
    
CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN premium_usd * 1.07 else premium_usd * 1.14 END as New_Premium_USD,

CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN mobile_usd * 1.07 else mobile_usd * 1.14 END as New_Mobile_USD,

CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN standard_usd * 1.07 else standard_usd * 1.14 END as New_Standard_USD,

CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN basic_usd * 1.07 else basic_usd * 1.14 END as New_Basic_USD,
    
mobile_usd, 
basic_usd, 
standard_usd,
premium_usd
from netflix_prices

/*What would be the average monthly rate for each pricing plan in USD as well as the number of countries for Latin American markets?*/
select 
count(CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN 'Latin America' ELSE 'Non Latin America' END) as Country_Type,
    
avg(CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN premium_usd * 1.07 else premium_usd * 1.14 END) as New_Premium_USD,

avg(CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN mobile_usd * 1.07 else mobile_usd * 1.14 END) as New_Mobile_USD,

avg(CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN standard_usd * 1.07 else standard_usd * 1.14 END) as New_Standard_USD,

avg(CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana ','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN basic_usd * 1.07 else basic_usd * 1.14 END) as New_Basic_USD
    
from netflix_prices

where CASE WHEN Country in ('Argentina','Belize','Bolivia','Brazil','Chile','Colombia','Costa Rica','Cuba','Dominican Republic','Ecuador','El Salvador','French Guiana','Guadeloupe','Guatemala','Guyana','Haiti','Honduras','Martinique','Mexico','Nicaragua','Panama','Paraguay','Peru','Puerto Rico','Saint-Barthelemy','Suriname','Uruguay','Venezuela','Saint-Martin (French part)','Jamaica','Saint Lucia') 
    THEN 'Latin America' ELSE 'Non Latin America' END = 'Latin America'

/*Our programming team is auditing the show renewal list for our content library and feels we don’t have enough content that has been renewed to stay on Netflix longer. So, she wants to know which TV shows with at least 3 seasons that haven’t been renewed and also not rated on IMDb or Rotten Tomatoes? Please band these shows into the following:

•	3 to 4 seasons: Low Consideration
•	5 to 6 Seasons: Moderate Consideration
•	7+ Seasons: Add to List */
select 
titles.show_id,
content_expire.show_id,
streaming_shows.rotten_tomatoes,
streaming_shows.imdb,
titles.title,
titles.no_seasons,
case when titles.no_seasons between 3 and 4 then 'Low Consideration'
    when titles.no_seasons between 5 and 6 then 'Moderate Consideration'
    else 'Add to List' end as Consideration_Status
from titles left join content_expire on titles.show_id=content_expire.show_id
left join streaming_shows on titles.title=streaming_shows.title
where titles.no_seasons >= 3 and content_expire.show_id is null and streaming_shows.rotten_tomatoes is null and streaming_shows.imdb is null 

/*The CFO is looking to decrease basic prices by 8% in the EMEA market due to a new streaming competitor in the European market and increasing prices by 11% in the North American and Latin American markets (excluding the US) for customers that have been with us for at least 18 months. We also will allow the content size for the EMEA countries to remain the same but will increase the content size by 5% for the North American and Latin American countries in order to substantiate the price increase. Please provide the new annual revenue for each of the customers with these new prices along with the effective date of these changes, which will be 90 days from their last payment date, and the new content size for each of the countries in the EMEA, Latin American, and North American markets.
•	United States (North American)
•	Canada (North American)
•	United Kingdom (EMEA)
•	Australia (EMEA)
•	Germany (EMEA)
•	France (EMEA)
•	Brazil	(Latin America)
•	Mexico (North American)
•	Spain	(EMEA)
•	Italy	(EMEA)*/
select userbase.user_id,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,
case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,
netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size

from userbase join netflix_countries on userbase.country=netflix_countries.country

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States'

/*For these users you provided me, may you tell me which ones are corporate? You can usually tell by their email addresses. Any with Yahoo, Gmail, Outlook, Hotmail, Cox, and AOL are personal email addresses. All others would be considered corporate. Please retain the same data pull from the previous request I sent to you.*/
Option 1:
select userbase.user_id,
sub_demo.e_dom,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,

case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,

netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size

from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States' and
(sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%')

Option 2 (with Case Statement):
select userbase.user_id,
sub_demo.e_dom,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,

case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,

netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size,

case when (sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') then 'Corporate' else 'Personal' end as Email_Type


from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States' and 
case when (sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') then 'Corporate' else 'Personal' end = 'Corporate'

/*For these users, can you let me know which are not email subscribers? We may be interested in a marketing campaign to target these users to get them added to our email list.*/
select userbase.user_id,
email_sub.id,
sub_demo.e_dom,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,

case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,

netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size,

case when (sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') then 'Corporate' else 'Personal' end as Email_Type


from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id
left join email_sub on email_sub.id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States' and 
case when (sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') then 'Corporate' else 'Personal' end = 'Corporate'
and email_sub.id is null

/*Please provide how many of these subscribers there are, the average new monthly revenue, the new total annual revenue, and the content size for EMEA subscribers.*/
select count(userbase.user_id) as Sub_Count,


avg(case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end) as Average_New_Monthly_Pricing,

sum(case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end) as Total_New_Annual_Pricing,

sum(case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end) as Total_New_Content_Size


from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id
left join email_sub on email_sub.id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country not in ('Mexico','Canada','Brazil','United States') and 
(sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') 
and email_sub.id is null 






















































